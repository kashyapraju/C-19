{"version":3,"sources":["components/indianFlag.png","components/bodyComponent.jsx","apiCalls/covid19trackerApi.js","components/commonComponent.jsx","components/headerComponent.jsx","App.js","index.js"],"names":["BodyComponent","fetched","setfetcheds","useState","graphFeched","setGraphFeched","globalCases","setGlobalcases","totalCases","setTotalCases","indianCase","setIndianCase","useEffect","axios","get","then","_ref","data","Global","NewConfirmed","TotalConfirmed","NewRecovered","TotalRecovered","NewDeaths","TotalDeaths","_ref2","cases_time_series","forEach","item","i","DATE","Date","date","currentMonth","getMonth","currentYear","getFullYear","dailyconfirmed","IndianCase","Object","keys","map","renderGraph","labels","title","bgColor","blue","borderColor","_jsxs","Box","mt","mr","ml","children","Grid","container","spacing","_jsx","xs","sm","Typography","variant","gutterBottom","style","color","entries","length","key","value","index","Color","Card","raised","CardContent","background","paddingRight","component","align","renderDisplayCard","CountUp","start","end","duration","green","red","height","width","display","flexDirection","justifyContent","alignItems","CircularProgress","p","src","indianFlag","alt","blueGrey","lineHeight","id","_ref3","ctx","document","getElementById","getContext","Chart","type","datasets","label","backgroundColor","borderWidth","options","scales","yAxes","gridLines","ticks","beginAtZero","callback","dataOfLabels","xAxes","responsive","maintainAspectRatio","HeaderComponent","AppBar","position","indigo","Toolbar","IconButton","edge","aria-label","BubbleChartOutlinedIcon","App","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6f687072.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/indianFlag.7c92a5aa.png\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { blue, blueGrey, green, red } from \"@material-ui/core/colors\";\nimport {\n  GetGlobalSummary,\n  GetRegionalSummary,\n} from \"../apiCalls/covid19trackerApi\";\nimport { renderDisplayCard } from \"./commonComponent\";\nimport CountUp from \"react-countup\";\nimport indianFlag from \"./indianFlag.png\";\nimport Chart from \"chart.js\";\n\nexport default function BodyComponent() {\n  const [fetched, setfetcheds] = useState(false);\n  const [graphFeched, setGraphFeched] = useState(false);\n  const [globalCases, setGlobalcases] = useState({});\n  const [totalCases, setTotalCases] = useState({});\n  const [indianCase, setIndianCase] = useState([]);\n\n  useEffect(\n    () =>\n      !fetched &&\n      GetGlobalSummary().then(({ data: { Global } }) => {\n        setGlobalcases({\n          \"New Cases\": Global.NewConfirmed,\n          \"Total Cases\": Global.TotalConfirmed,\n          \"New Recovery\": Global.NewRecovered,\n          \"Total Recovery\": Global.TotalRecovered,\n          \"New Deaths\": Global.NewDeaths,\n          \"Total Deaths\": Global.TotalDeaths,\n        });\n        setfetcheds(true);\n      })\n  );\n\n  //useeffect for graph\n  useEffect(() => {\n    !graphFeched &&\n      GetRegionalSummary().then(({ data: { cases_time_series } }) => {\n        const data = {};\n\n        cases_time_series.forEach((item, i) => {\n          const DATE = new Date(item.date);\n          const currentMonth = DATE.getMonth();\n          const currentYear = DATE.getFullYear();\n\n          if (!data[currentYear]) {\n            data[currentYear] = {};\n          }\n          if (!data[currentYear][currentMonth]) {\n            data[currentYear][currentMonth] = +item.dailyconfirmed;\n          } else {\n            data[currentYear][currentMonth] += +item.dailyconfirmed;\n          }\n        });\n        setTotalCases(data);\n        const IndianCase = Object.keys(data[\"2021\"]).map((item, i) => {\n          return data[\"2021\"][item];\n        });\n        setIndianCase(IndianCase);\n        setGraphFeched(true);\n      });\n    renderGraph({\n      labels: [\n        \"jan\",\n        \"feb\",\n        \"mar\",\n        \"apr\",\n        \"may\",\n        \"jun\",\n        \"jul\",\n        \"aug\",\n        \"sep\",\n        \"oct\",\n        \"nov\",\n        \"dec\",\n      ],\n      title: \"Covid cases\",\n      data: indianCase,\n      bgColor: blue[200],\n      borderColor: blue[800],\n    });\n  });\n\n  return (\n    <Box mt={2} mr={2} ml={2}>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={12}>\n          <Typography\n            variant='h6'\n            gutterBottom={true}\n            style={{ color: blue[700] }}>\n            Global Status\n          </Typography>\n        </Grid>\n        {!Object.entries(globalCases).length ? (\n          <Box\n            style={{\n              height: \"200px\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}>\n            <Typography variant='body1' color='textSecondary' align='center'>\n              Loading Global state ...\n            </Typography>\n            <br />\n            <CircularProgress color='secondary' />\n          </Box>\n        ) : (\n          Object.entries(globalCases).map((item, i) =>\n            renderDisplayCard({\n              key: item[0],\n              value: <CountUp start={0} end={item[1]} duration={2} />,\n              index: i,\n              Color:\n                item[0] === \"New Cases\"\n                  ? blue[500]\n                  : item[0] === \"Total Cases\"\n                  ? blue[500]\n                  : item[0] === \"New Recovery\"\n                  ? green[500]\n                  : item[0] === \"Total Recovery\"\n                  ? green[500]\n                  : red[500],\n            })\n          )\n        )}\n      </Grid>\n      {/* graph grid / */}\n      <Box mt={4}>\n        <Grid container>\n          <Grid item xs={12} sm={12}>\n            <Typography\n              variant='h6'\n              gutterBottom={true}\n              style={{ color: blue[700] }}>\n              Regional Status\n            </Typography>\n          </Grid>\n          {/* //graph card  */}\n          <Grid item xs={12} sm={12}>\n            <Card>\n              <Box p={(1, 1)} style={{ display: \"flex\" }}>\n                <img\n                  src={indianFlag}\n                  alt={\"Indian flag\"}\n                  style={{ width: \"40px\", height: \"auto\" }}\n                />\n                <Typography\n                  variant='body1'\n                  component='h6'\n                  style={{\n                    color: blueGrey[700],\n                    lineHeight: \"50px\",\n                  }}>\n                  India\n                </Typography>\n              </Box>\n              <CardContent>\n                <canvas id='myChart' width='100%' height='400'></canvas>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n\nexport const renderGraph = ({ labels, title, data, bgColor, borderColor }) => {\n  let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n  let myChart = new Chart(ctx, {\n    type: \"line\",\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          label: title,\n          data: data,\n          backgroundColor: bgColor,\n          borderColor: borderColor,\n          borderWidth: 3,\n        },\n      ],\n    },\n    options: {\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            },\n            ticks: {\n              beginAtZero: true,\n              callback: function (label, index, dataOfLabels) {\n                return label / 1000000 + \"m\";\n              },\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              color: \"rgba(0, 0, 0, 0)\",\n            },\n          },\n        ],\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n    },\n  });\n  return myChart;\n};\n","import axios from \"axios\";\n\n// axios.get()\n// axios.post()\n// axios.update()\n// axios.delete()\n\nexport const GetGlobalSummary = () => {\n  return axios.get(\"https://api.covid19api.com/summary\");\n};\nexport const GetRegionalSummary = () => {\n  return axios.get(\"https://api.covid19india.org/data.json\");\n};\n","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\n\nexport const renderDisplayCard = ({ key, value, index, Color }) => (\n  <Grid item xs={6} sm={3} key={index}>\n    <Card raised={true}>\n      <CardContent>\n        <Grid container>\n          <Grid\n            item\n            xs='auto'\n            style={{ background: Color, paddingRight: \"5px\" }}></Grid>\n          <Grid item xs={11}>\n            <Typography\n              variant='body1'\n              component='h6'\n              align='center'\n              color='textSecondary'\n              gutterBottom={true}>\n              {key}\n            </Typography>\n            <Typography\n              variant='h5'\n              component='h5'\n              align='center'\n              style={{ color: Color }}>\n              {value}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  </Grid>\n);\n","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { indigo } from \"@material-ui/core/colors\";\nimport BubbleChartOutlinedIcon from \"@material-ui/icons/BubbleChartOutlined\";\nimport React from \"react\";\n\nexport default function HeaderComponent() {\n  return (\n    <AppBar position='static' style={{ background: indigo[\"A400\"] }}>\n      <Toolbar>\n        <IconButton edge='start' color='inherit' aria-label='menu'>\n          <BubbleChartOutlinedIcon />\n        </IconButton>\n        <Typography variant='h6'>Covid19 Tracker</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport BodyComponent from \"./components/bodyComponent\";\nimport HeaderComponent from \"./components/headerComponent\";\n\nexport default function App() {\n  return (\n    <div>\n      <HeaderComponent />\n      <BodyComponent />\n    </div>\n  );\n}\n\n// npx create-react-app covid19tracker\n// npm start\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}